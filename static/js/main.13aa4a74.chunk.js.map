{"version":3,"sources":["icons/calender.svg","components/AddTodo.js","icons/pen.svg","icons/del.svg","components/Todo.js","components/ListTodo.js","icons/add.svg","icons/list.svg","icons/filter.svg","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","props","addTodo","categories","setCategories","useState","setOption","description","date","Date","category","id","now","todo","setTodo","className","rows","value","onChange","e","target","status","style","display","selected","src","calender","isMulti","closeMenuOnSelect","components","makeAnimated","options","label","selectedCategories","map","v","i","onInputChange","input","action","onClick","Todo","setStatus","editTodo","deleteTodo","edit","console","log","type","checked","htmlFor","backgroundColor","maxWidth","flex","width","height","padding","onclick","pen","del","c","ListTodo","todos","setTodos","todoByDate","reduce","acc","sorted","sort","t1","t2","sortedTodosWith","sortedTodoDates","Object","keys","d1","d2","getTime","dateFormat","dateToFormat","getDate","getMonth","getFullYear","todoId","updatedTodos","t","handleStatusChange","Nav","selectedMenu","setSelectedMenu","add","alt","list","filter","App","setEditState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13aa4a74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calender.d0164a4e.svg\";","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport calender from '../icons/calender.svg';\nimport {  useState } from 'react'\nimport '../styles/addtodo.css';\nimport makeAnimated from 'react-select/animated';\nimport CreatableSelect from 'react-select/creatable';\nfunction AddTodo(props) {\n\n    //category options in {label: , id:} format\n    const { addTodo, categories, setCategories } = props;\n\n    const [newOption, setOption] = useState('')\n\n    //newly added todo\n    const [todo, setTodo] = useState({\n        description: '',\n        date: new Date(),\n        category: [],\n        id: Date.now()\n    });\n\n    function addTodoHandler() {\n        addTodo(todo);\n    }\n\n    function selectCategoryHandler(value) {\n        let selectedCategories = value.map((v, i) => v.value);\n        setTodo({ ...todo, category: [...selectedCategories] })\n    }\n\n    function inputNewCategory(input, action) {\n        setOption(input);\n    }\n    return <>\n        <div className='addtodo-container'>\n            <div className='addtodo-input-container'>\n                <label>Description</label>\n                <textarea\n                    className='textArea'\n                    rows={5}\n                    value={todo.description}\n                    onChange={e => setTodo({ ...todo, description: e.target.value, status: 'undone' })}>\n                    {todo.description}\n                </textarea>\n            </div>\n\n            <div className='addtodo-input-container'>\n                <label>Date</label>\n                <div style={{ display: \"flex\" }}>\n                    <DatePicker\n                        className='addtodo-input-date'\n                        selected={todo.date}\n                        onChange={(date) => setTodo({ ...todo, date: date })} >\n                    </DatePicker>\n                    <div>\n                        <img src={calender} ></img>\n                    </div>\n                </div>\n            </div>\n\n            <div className='addtodo-input-container'>\n                <label>Categories</label>\n                <div>\n                    <CreatableSelect\n                        isMulti={true}\n                        closeMenuOnSelect={false}\n                        components={makeAnimated()}\n                        options={categories}\n                        value={categories.label}\n                        onChange={selectCategoryHandler}\n                        onInputChange={inputNewCategory} />\n                </div>\n            </div>\n\n            <div className={'addtodo-input-container' + ' ' + 'addtodo-input-btn'}>\n                <button onClick={addTodoHandler} className='save-todo'>SAVE</button>\n            </div>\n        </div>\n    </>\n}\n\nexport default AddTodo;","export default __webpack_public_path__ + \"static/media/pen.631e80b1.svg\";","export default __webpack_public_path__ + \"static/media/del.f207f1ee.svg\";","import '../styles/todo.css';\nimport pen from '../icons/pen.svg';\nimport del from '../icons/del.svg'\nimport { useState } from 'react';\nfunction Todo(props) {\n    const { description, status, category, setStatus, id, editTodo, deleteTodo ,edit} = props;\n  \n    console.log(category, category)\n\n    function handleChecked(e) {\n        if (e.target.checked === true) {\n            setStatus('done', id)\n        } if (e.target.checked === false) {\n            setStatus('undone', id)\n        }\n    }\n\n    return (\n        <div className='todo-container'>\n            <div className='todo-description'>\n                <input type='checkbox' id={'todo' + id} checked={status == 'done'} onChange={handleChecked} />\n                <div htmlFor={'todo' + id} className='todo-content' style={{ backgroundColor: `${status == 'done' ? '#9DB68C' : '#fff'} ` }}>\n                    <div style={{ display: 'flex', maxWidth: '100%' }}>\n                        <div style={{ flex: 2 }}>\n                          <p>  {description} </p>\n                        </div>\n                        <div className='todo-update'>\n                            <div\n                                style={{ width: '20px', height: '20px', display: 'flex', padding: '3px' }}\n                                onclick={() =>  deleteTodo(id) }>\n                                <img src={pen} />\n                            </div>\n                            <div\n                                style={{ width: '25px', height: '25px', display: 'flex', padding: '3px' }}\n                                onClick={() =>  editTodo(id) }>\n                                <img src={del} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='todo-categories' >\n                        {category.map(c => (<div className='todo-category' >\n                            <span>{c}</span>\n                        </div>))}\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Todo;","import Todo from \"./Todo\"\nimport '../styles/listTodo.css'\nimport { useEffect, useState } from \"react\";\n\n\nfunction ListTodo(props) {\n  const { todos, setTodos,editTodo,deleteTodo } = props;\n\n  const sortedTodosWith = (todos, todo) => {\n    const sorted = [...todos, todo];\n    sorted.sort((t1, t2) => {\n      if (t1.status === 'done' && t2.status === 'undone') {\n        return 1;\n      } else if (t1.status === t2.status) {\n        return 0;\n      } else {\n        return -1;\n      }\n    });\n    return sorted;\n  }\n\n  const todoByDate = todos.reduce((acc, todo) => ({\n    ...acc,\n    [todo.date]: sortedTodosWith(acc[todo.date] || [], todo)\n  }), {});\n\n  const sortedTodoDates = Object.keys(todoByDate)\n    .sort((d1, d2) => (new Date(d2)).getTime() - (new Date(d1)).getTime())\n\n  console.log(todoByDate);\n\n  function handleStatusChange(status, todoId) {\n    const updatedTodos = todos.map(t => {\n      if (t.id === todoId) {\n        t.status = status\n      }\n      return t\n    })\n    setTodos([...updatedTodos]);\n  }\n\n  function dateFormat(dateToFormat) {\n    let date = new Date(dateToFormat);\n    return date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear()\n  }\n\n  return (\n    <div style={{ width: '98%' }}>\n      { sortedTodoDates.map((date, i) => {\n        return (\n          <>\n            <div className='listTodo-dateContainer'>\n              <div className='listTodo-date'><span>{dateFormat(date)}</span></div>\n            </div>\n            { todoByDate[date].map(todo =>\n\n              <Todo\n                description={todo.description}\n                category={todo.category}\n                status={todo.status}\n                setStatus={(status) => handleStatusChange(status, todo.id)}\n                id={todo.id} \n                editTodo={editTodo}\n                deleteTodo={deleteTodo}/>\n            )}\n          </>\n        )\n\n      })}\n    </div>\n  )\n}\n\n\n\nexport default ListTodo;\n\n\n\n","export default __webpack_public_path__ + \"static/media/add.4181a836.svg\";","export default __webpack_public_path__ + \"static/media/list.d521087b.svg\";","export default __webpack_public_path__ + \"static/media/filter.e3cc16c3.svg\";","import add from '../icons/add.svg';\nimport list from '../icons/list.svg'\nimport filter from '../icons/filter.svg'\nimport '../styles/nav.css'\nfunction Nav(props) {\n    const { selectedMenu, setSelectedMenu } = props;\n    return (\n        <>\n            <div className='nav-container'>\n                <div className='nav-button'  onClick={() => setSelectedMenu('addTodo')}>\n                    <div\n                        className='nav-logo'\n                        >\n                        <img src={add} alt='img' />\n                    </div>\n                    <div><p>ADD TODO</p></div>\n                </div>\n                <div className='nav-button'>\n                    <div\n                        className='nav-logo'\n                        onClick={() => setSelectedMenu('list')}>\n                        <img src={list} alt='img' />\n                    </div>\n                    <div><p>LIST TODO</p></div>\n                </div>\n                <div className='nav-button'>\n                    <div\n                        className='nav-logo'\n                        onClick={() => setSelectedMenu('filter')}>\n                        <img src={filter} alt='img' />\n                    </div>\n                    <div><p>FILTER TODOS</p></div>\n                </div>\n            </div>\n            <div className='mob-container'>\n                <div className='mob-option' onClick={() => setSelectedMenu('addTodo')}>\n                    <img src={add} alt='img' />\n                </div>\n                <div className='mob-option'  onClick={() => setSelectedMenu('list')}>\n                    <img src={list} alt='img' />\n                </div>\n                <div className='mob-option' onClick={() => setSelectedMenu('filter')}>\n                    <img src={filter} alt='img' />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Nav;","\nimport AddTodo from './components/AddTodo';\nimport ListTodo from './components/ListTodo';\nimport Nav from './components/Nav';\nimport './App.css';\nimport { useState } from 'react';\n\n\nfunction App() {\n    const [todos, setTodos] = useState([]);\n    const [categories, setCategories] = useState([\n        { label: 'Home', value: 'Home' },\n        { label: 'Office', value: 'Office' },\n        { label: 'School', value: 'School' }\n    ]);\n    const [selectedMenu, setSelectedMenu] = useState('list');\n    const [editState,setEditState] =useState()\n    function deleteTodo(id) {\n        console.log(\"DELETED\")\n        const updatedTodos = todos.filter(todo => todo.id !== id);\n        setTodos([...updatedTodos]);\n    }\n    // function editTodo(id,todo) {\n    //     const updatedTodos = todos.filter(todo => todo.id !== id);\n    //     setTodos([...updatedTodos,todo]);\n    // }\n\n    function editTodo(id){\n        if(id){\n            setEditState(true)\n        }\n    }\n    return (\n        <>\n            <div className='wrapper'>\n                <Nav\n                    selectedMenu={selectedMenu}\n                    setSelectedMenu={setSelectedMenu}\n                />\n\n                {(selectedMenu === 'addTodo') &&\n                    <AddTodo\n                        addTodo={todo => setTodos([...todos, todo])}\n                        categories={categories}\n                        setCategories={setCategories} />\n                }\n                {(selectedMenu === 'list') &&\n                    <ListTodo\n                        todos={todos}\n                        setTodos={setTodos}\n                        deleteTodo = {(id)=>deleteTodo(id)}\n                        editTodo = {(id)=>editTodo()}\n                    />\n                }\n            </div>\n        </>\n    )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}